MSVC
~~~~
  Введение 
  Юзаем либо VCToolkit либо Visual C++ 2005 EE (и дальше) с обязательным дополнением 
  в виде последнего Platform SDK. 

  MSVC 6 
    Эээ... этот не рассматриваем... 

  VCToolkit (MSVC.2003) 
    В архиве http://farmanager.com/farbugs/vc.2003.rar есть все, что нужно для 
    компиляции FAR (заголовочные файлы и библиотеки). За основу взят "халявный" 
    MS компилятор + из SDK добавлены h- и lib-файлы. 

  Visual C++ 2005 EE (MSVC.2005) 
    Два пути: 
     Web Install (http://go.microsoft.com/fwlink/?LinkId=51410&clcid=0x409) 
     ISO (http://go.microsoft.com/fwlink/?linkid=57034) + SP1 

  Platform SDK 
    Вытягиваем последний SDK, например, вот этот - Microsoft R Windows ServerR 2003 R2 Platform SDK: 

    * Web Install (http://www.microsoft.com/downloads/details.aspx?FamilyId=0BAF2B35-C656-4969-ACE8-E4C0C0716ADB)
    * Full Install (http://www.microsoft.com/downloads/details.aspx?FamilyId=484269E2-3B89-47E3-8EB7-1F2BE6D7123A&displaylang=en)
    * ISO Install (http://www.microsoft.com/downloads/details.aspx?FamilyId=E15438AC-60BE-41BD-AA14-7F1E0F19CA0D&displaylang=en) 
  
  Проблемы
    Сдается, что с теми файлами, что в проекте (far.dsp, far.dsw) будут проблемы 
    при компиляции в гуях. Если не так - то нужно на SVN`е обновить эти файлы... 


  Microsoft Visual C++ 8.0 (VC2005) _MSC_VER = 1400
  Microsoft Visual C++ 7.1 (VC2003) _MSC_VER = 1310
  Microsoft Visual C++ 7.0 (VC2002) _MSC_VER = 1300
  Microsoft Visual C++ 6.0 _MSC_VER = 1200
  Microsoft Visual C++ 5.0 _MSC_VER = 1100



GCC
~~~
  Введение
    Исходники содержат mak-файл, позволяющий компилировать FAR с помощью GCC. 
    Будем использовать порт GCC из MinGW и MSYS. 

    MinGW или Mingw32 (от англ. Minimalist GNU for Windows) - коллекция свободно 
    распространяемых заголовочных файлов и библиотек в сочетании с набором инструментов 
    GNU (компилятор GCC и др.), которая позволяет создавать приложения Windows, 
    не использующие сторонние DLL в качестве стандартной библиотеки C. Первоначально 
    создавался как ответвление Cygwin.

    Для этого вот отсюда: 

      * ftp://gd.tuwien.ac.at/gnu/mingw 
      * http://sourceforge.net/project/showfiles.php?group_id=2435 
      * http://www.mingw.org/download.shtml 

    берем последнии версии необходимых компонентов, где новее. 

  Инсталляций MinGW
  ~~~~~~~~~~~~~~~~~
    Инсталлировать MinGW & MSYS можно 3-мя способами: 

    1. "Солянка" 
    2. MinGW + MSYS 
    3. MSYS + MinGW 
    
    Рассмотрим каждый способ. 

    "Солянка"
    ~~~~~~~~~
      Неправильно-тупой метод :-) 

      Берем последнии версии следующих компонентов: 
        MSYS-xxx 
        mingw-utils-xxx 
        w32api-xxx 
        gcc-core-xxx 
        gcc-g++-xxx 
        mingw-runtime-xxx 
        mingw32-make-xxx 
        bash-xxx 
        binutils-xxx 
      Разваливаем все в один каталог (сохраняя пути, содержащиеся в архивах) 
      В переменных среды прописываем путь к каталогу bin 

    MinGW + MSYS
    ~~~~~~~~~~~~
      Установить MinGW можно двумя способами: 

      При хорошем интернет канале запускаем MinGW-xxxx.exe и говорим 
      "загрузить и установить" (дополнительно отмечаем компоненты g++ compiler 
      и MinGW Make) 
      Вытягиваем следующие компоненты (и разваливаем все в один каталог, 
      сохраняя пути, содержащиеся в архивах): 
        mingw-utils-xxx 
        w32api-xxx 
        gcc-core-xxx 
        gcc-g++-xxx 
        mingw-runtime-xxx 
        mingw32-make-xxx 
        binutils-xxx 
      Далее ставим MSYS - запустить MSYS-xxxx.exe, пути можно оставить as is или 
      поменять на свое. В процессе иснталляции утвердительно киваем о продолжении 
      постинсталляционного процесса. Указываем путь к каталогу, куда установили MinGW. 

      В переменных среды прописываем пути к каталога bin для MinGW и MSYS. 

    MSYS + MinGW
    ~~~~~~~~~~~~
      Ставим MSYS - запустить MSYS-xxxx.exe (пути можно оставить as is или 
      поменять на свое). В процессе иснталляции утвердительно киваем о продолжении 
      постинсталляционного процесса. Про MinGW говорим, что его пока нет. 

      Далее ставим MinGW (описано в методе MinGW + MSYS). Ставить MinGW можно в 
      отдельный каталог или в каталог <msys_prefix>/mingw (здесь <msys_prefix> - 
      путь, куда установили MSYS). Если пакет ставили в отдельный каталог, то в 
      файле <msys_prefix>/etc/fstab "мапим", например так (MinGW устанавливали 
      в C:\usr\devel\MinGW): 

        c:/usr/devel/MinGW	/mingw
      
      В переменных среды прописываем пути к каталога bin для MinGW и MSYS. 

  Update MinGW
  ~~~~~~~~~~~~
    Обновление MinGW
    ~~~~~~~~~~~~~~~~
      Вы должны следить за почтой и статьями новостей по обновлениям пакетов. 
      В особенности, если вы хотите обновлять библиотеки времени выполнения 
      wingw и w32api, когда новые версии этих пакетов анонсируются. 
      Убедитесь, что вы устанавливаете обновления в c:\mingw (или туда, 
      куда вы установили MinGW). Если вы используете MSYS, вы можете 
      выполнить cd /mingw для разархивации архивов tar. 

      Если использовался MinGW-xxxx.exe, то процесс апдейта похож на 
      инсталляцию. Дело в том, что после стягивания нужных компонентов, 
      инсталлятор проверяет наличие новых и, если они есть, дотягивает, 
      иначе использует те, что есть. 

      Но в любом случае имеет смысл самому проверить компоненты (*.tar.gz) 
      на перечисленных выше ресурсах и, если есть новее, проапдейтиться - 
      развалить архивы с сохранением путей. 

    Обновление MSYS
    ~~~~~~~~~~~~~~~
      Следите за анонсами в почте и статьях новостей по обновлениям MSYS 
      пакетов. Убедитесь, что вы вышли из всех исполняемых модулей MSYS 
      перед выполнением обновления. Обновление запускается также, как и 
      процесс установки. Заметьте, что изменённые файлы в каталоге /etc 
      будут перезаписаны. Вы должны воздержаться от внесения изменений в 
      файлы, такие как /etc/profile, а вместо этого добавлять записи в 
      ~/.profile. Также нужно избегать изменений в /msys.bat, так как этот 
      файл также будет перезаписан. Если вы хотите изменить цвета терминала 
      rxvt, тогда создайте соответствующие переменные окружения, как описано 
      в msys.bat. 

  Юзаем
  ~~~~~
    ... 

  Ссылки
  ~~~~~~
    www.mingw.org 
    sourceforge.net/projects/mingw 
    gnuwin32.sourceforge.net 


BCC
~~~

  Введение
  ~~~~~~~~
    Boralnd C++ ... 
    Сборка боралндом 32х-битовой версий может иметь смысл (не смотря 
    на плохой оптимизатор в компиляторах borland) из-за наличия в нём 
    насширений препроцессора. Возможность проверок за счёт использования 
    #if по отношению к sizeof, offsetof и enumam'ам может быть 
    обеспечена в других компиляторах только при использовании 
    boost::assert, который пока не слишком вылизан. 

    Однако использование борландовсих компиляторов ниже чем из bcb6, 
    связана с проблемами из-за ошибки в winbase.h присуствующей в 5.02/bcb5 
    и free 5.5 compilers (не отключено выравнивание на 8 для WIN32_FIND_DATA). 
    В качестве решения может быть либо (для плугинов) определение для 
    проекта _FAR_USE_FARFINDDATA, либо внесение правок в include-file 
    компилятора (что не есть хорошо), либо (при использовании bcb6 или 
    bds4) компиляция в режиме -a1, что тоже не слишком хорошо. 

    Другими словами нормально использовать борландовские компиляторы 
    для ядра Far'а можно будет тольо после полного отказа от WIN32_WIND_DATA :) 

  Сборка проекта
  ~~~~~~~~~~~~~~
    tlink32
    ~~~~~~~
    ...
    
    UniLink (ulink)
    ~~~~~~~~~~~~~~~
      Компоновка UniLink'ом может иметь смысл (и не только при сборке 
      компиляторами от Borland) как для некоторого уменьшения выходного 
      файла :), так и (в основном) для обнаружения потенциально некорректных 
      (ошибкочных) конструкций в программе. Эти ошибки могут быть вызваны 
      как неправильно подобранными ключами компилятора (сочетаниями их) 
      так и ошибками самих программистов. Большинство из них выражаестя 
      при компоновке в виде предупреждений б/м понятный по смыслу :). 

      Использование ulink тем кто работал с линкерами от борланда 
      предельно тривиально - все [осмысленные] ключи tlink32/ilink32 
      поддерживаются практически в той же семантике, а дополнительные 
      ключи видны либо из экрана подсказки (ulink -?), либо (более детально) 
      описаны в chm'е. Который пока находится в "русско-английском" 
      состоянии :) и потому не входит в дистрибутив самого линкера. 
      Но где-то тут его можно выложить :). 

      При работе (сборке) разными компиляторами имеет смысл держать в 
      той же директории где ulink и несколько вариантов конфигурационных 
      файлов, а в makefile (или bat/cmd-файлах) которыми запускается 
      сборка переключать их командами вида: 

         ulink +.ext
      
      где 'ext' требуемая конфигурация. 

      Ещё одна особенность - при сборке и Borlan'ом и VC отладочной 
      версии на выходе получается tds-file, который может использоваться 
      в любых борланд-совместимых отладчиках (начиная от td32 и кончая 
      оболочками). А они позволяют несколько больший тьюнинг при отладке 
      чем мелкомягие :) 

    ilink32
    ~~~~~~~
      Мало чем отличется от tlink32 за исключением крайней желательности 
      всегда указывать ключ -Gn. Ну, ещё чуть быстрее работает. Но всё 
      равно медленее ulink'а :) 

  Отладка
  ~~~~~~~
    TD32.EXE
    ~~~~~~~~
      Использовать TD32 тем кто им никогда не пользовался особого 
      смысла не имеет - если нет привычки работать в TV-style 
      консольных отладчиках лучше её и не получать :). 

      Если же есть желание его использовать, то рекомендуется применить 
      хотя бы часть патчей исправляющих грубые ошибки, которые можно 
      взять на: ftp://ftp.styx.cabel.net/pub/UniLink/td32_cor.zip 

      ВНИМАНИЕ: если будете идти по ссылке, то учтите что 
                "не настроенные" пароли для anonymous'а в 
                вашем browser'е (не введённый нормальный e-mail 
                вместо того что он туда подставляет) может не 
                пустить вас на сервер :) 

    cdb32.exe
    ~~~~~~~~~
      Это предельно сырая попытка "осовременить" (и починить :) 
      борландовский TD32. 

      Из отличий можно упомянуть поддержку манглинга всех современных 
      компиляторов, и - что бывает важно, возможность приостановить 
      отлажвиаемый процесс нажатием Ctrl-Break в окне отладчика. 

      Однако в силу его "сырого" состояния его использование можно 
      рассматривать как пре-альфа-тестинг :) 

      Работа с ним полностью аналогична работе с TD32, а если удаётся 
      получить чёткую(повторяемую) ошибку (например падение :), то 
      выслав бинарник/tds и описав последовательность действий, можно 
      рассчитывать на то что она исправится). Но запросов новых феатур 
      лучше не посылать - будет время и так появятся :) 

  Где взять
  ~~~~~~~~~
    Компиляторы у Borland. Или купить. Или в emule :). Там же tlink32/ilink32 и TD32. 

    ulink: ftp://ftp.styx.cabel.net/pub/UniLink/ulnb0121.zip 

           ВНИМАНИЕ: '0121' это просто текущий номер билда (которые регулярно 
                      меняются), посему ссылка прождивёт недолго :). Номер 
                      послдеднего билда всегда указан в 00_index.txt. 
                      При этом желательно так же подписыаться на рассылку 
                      о обновления (как - описано в файле beta_en/ru.txt 
                      в архиве), т.к. "претензии" принимаются только по 
                      текущей версии :) 

    cdb32: Только по e-mail (это даже не альфа). Буде возникнет такое желание :). 

    DosWin32: http://www.doswin32.com. Это для тех у кого есть желание 
          проверять/тестировать поведение Far'а в голом DOS'е. 
