ПРАВИЛА
~~~~~~~

Сборка
~~~~~~
1. Для сборки с помощью VC есть набор батников:

   Эти батники на прямую не редактировать!!!!!!!!!
   Только для постоянных изменений для всех участников проекта.
   Читайте объяснение - всё продумано.

   --------------------
   vc.build.release.bat
   --------------------
   Этот батник собирает release версию фара с помощью VC и Far.mak.
   Батник заодно обновляет far.release.dep и языковые файлы.
   С запуском этого батника никогда не будут никаких проблем при сборке фара
   (кроме ошибок в самом коде :).
   Чтобы батник был универсальным и работал у всех без изменений он
   вызывает другой батник - custom.vc.release.bat - если такой есть.
   Этот (custom.vc.release.bat) батник вам надо создать самим так как он ваш
   личный и на SVN комитится не будет. В нём вы можете определять переменные
   среды компайлера и переопределять переменные среды которые используются
   для сборки фара в главном батнике.
   Например у меня он содержит:
   ---->8----
   @echo off
   call F:\lng\VC.Toolkit.2003\vcvars32.bat
   ----8<----

   ------------------
   vc.build.debug.bat
   ------------------
   Тоже что и vc.build.release.bat только собирает debug версию, обновляет
   far.debug.dep и вызывает custom.vc.debug.bat если такой есть.
   Пример custom.vc.debug.bat:
   ---->8----
   @echo off
   call F:\lng\VS98\Bin\VCVARS32.BAT
   set FAR_MSVCRT=/D FAR_MSVCRT
   set FARSYSLOG=-DSYSLOG_TREX %FARSYSLOG%
   ----8<----

   Если 32хбитовые версии должны собираться VC8(VS2005), то в custum.vc...bat
   нужно включить строки
   ---->8----
   set NMAKE_OPTS=USE_VC8_32=1
   ----8<----

   Всё тоже самое и для x64 сборки только с
   vc.build.debug.64.bat --> custom.vc.debug.64.bat
   vc.build.release.64.bat --> custom.vc.release.64.bat


   Если в качестве линкера хочется использовать ulink, то в custum.vc...bat
   нужно включить строку
   ---->8----
   set NMAKE_OPTS=LINK_ULINK=1
   ----8<----
   или (для 32хбитовых версий компилируемых VC8)
   ---->8----
   set NMAKE_OPTS=USE_VC8_32=1 LINK_ULINK=1
   ----8<----

   Через задание NMAKE_OPTS можно передавать так же и ключи nmake


2. Для сборки GCC есть мэйк файл который всё делает:
   makefile_gcc


Описание изменений - файл "changelog"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. Все комментарии по внесенным изменениям пишутся в файл "changelog".
   В сорцах имеет смысл оставлять комменты только если участок в вашей точки
   зрения будет непонятен для "будущих поколений".
2. Дописываем изменения в начало файла.
3. Каждая запись начинается с шапки вида:
   warp 05.12.2006 01:39:38 +0300 - build 2149
4. Изменениям может не присваиваться билд, например, была косметика в
   исходниках.


farversion.m4
~~~~~~~~~~~~~
1. Этот файл содержит информацию для генерации версии фара:
   a. BUILDTYPE, строка определяющая тип сборки, может быть:
      - `'      - пустая строка обозначает релиз
      - `alpha' - альфа версия
      - `beta'  - бета версия
      - `RC'    - релиз кандитат
      - `ЧтоЛибоДругое' - предназначено для выпуска версий фара
        код которых ещё не вошел в SVN чтоб не путать людей и нас.
        Вывод версии фара будет выглядеть следующим образом:
        ВерсияФара alpha ЧтоЛибоДругое based on build НомерБилда
   b. BUILDTESTONLY, флаг для вывода TEST ONLY! в версии. Может быть 1 или 0.
   c. BUILDTYPENUM, номер сборки - будет выводится для alpha,beta,RC версий.
   d. MAJOR - MAJOR версия фара (например 1).
   e. MINOR - MINOR версия фара (например 71).


vbuild.m4
~~~~~~~~~
1. Если в файле "vbuild.m4" был изменен номер билда, то после коммита
   изменений необходимо запустить "svn_tag_build.bat"


Исключения
~~~~~~~~~~
1. Вместо _try __try и т.п. применяем макрос TRY
2. Вместо __except и т.п. применяем макрос EXCEPT


GCC - обеспечение "удачной" компиляции под GCC
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. Вместо постфиксов i64 и ui64 используем макро _i64() и _ui64().


x64 - обеспечение "удачной" работы под x86 и x64
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. DWORD_PTR, LONG_PTR, etc. применяется вместо DWORD/long/etc. в следующих
   случаях:

   a) нужны там где раньше были int/long/dword/или_любой_не_поинтер_тип_даных
      и в него пихали поинтер
   b) ...
   c) ...


REMINDER
~~~~~~~~
В файле "REMINDER" необходимо заносить сведения, на которые стоит обратить
внимание (или после некоторых действий "вернуться" к некоторому начальному
состоянию).
